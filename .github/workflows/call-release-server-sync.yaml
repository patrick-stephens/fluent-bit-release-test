---
name: Reusable workflow to sync release to server

on:
  workflow_call:
    inputs:
      environment:
        description: The Github environment to run this workflow on.
        type: string
        required: false
    secrets:
      bucket:
        description: The name of the S3 (US-East) bucket to sync packages from.
        required: true
      access_key_id:
        description: The S3 access key id for the bucket.
        required: true
      secret_access_key:
        description: The S3 secret access key for the bucket.
        required: true
      server_hostname:
        description: The server hostname to sync to.
        required: true
      server_username:
        description: The username to authenticate with on the server.
        required: true
      server_key:
        description: The SSH key to use for authentication.
        required: true
jobs:
  remove-release-packages-server:
    name: fluentbit.io - upload packages
    runs-on: ubuntu-18.04 # failures with AWS client on latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup runner
      run: |
        sudo apt-get install rsync
      shell: bash

    - name: Hashed known hosts value
      id: known_hosts
      run: |
          OUTPUT=$(ssh-keyscan -H ${{ secrets.server_hostname }})
          echo ::set-output name=OUTPUT::$OUTPUT

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.server_key }}
        known_hosts: ${{ steps.known_hosts.outputs.OUTPUT }}

    - name: Sync packages from release bucket on S3
      run: |
        mkdir -p packaging/releases
        aws s3 sync "s3://$BUCKET" packaging/releases/ --no-progress
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_access_key }}
        BUCKET: ${{ secrets.bucket }}
      shell: bash

    - name: Upload to build server
      run: |
        ssh $USERNAME@$HOST mkdir -p /home/$USERNAME/s3-release
        rsync --include="*/" --include="*.rpm" --include="*.deb" --exclude="*" -amvz packaging/releases/ $USERNAME@$HOST:/home/$USERNAME/s3-release
      env:
        HOST: ${{ secrets.server_hostname }}
        USERNAME: ${{ secrets.server_username }}
      shell: bash

    # We could also automate the final step here eventually to get the packages "live"
