---
name: Windows CI

# This is only expected to be invoked on-demand by a specific user.
on:
  workflow_dispatch:

jobs:
  call-test-windows-packaging:
    name: Windows package tests
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download packages locally
      run: |
        Invoke-WebRequest -Uri $Env:EXE_SOURCE -OutFile C:\temp\fluent-bit.exe
        Invoke-WebRequest -Uri $Env:ZIP_SOURCE -OutFile C:\temp\fluent-bit.zip
      shell: powershell
      env:
        EXE_SOURCE: https://fluentbit.io/releases/1.8/td-agent-bit-1.8.11-win64.exe
        ZIP_SOURCE: https://fluentbit.io/releases/1.8/td-agent-bit-1.8.11-win64.zip

    - name: Install zip locally to test
      run: |
        Expand-Archive C:\temp\fluent-bit.zip
      shell: powershell

    - name: Run zip version with simple config
      timeout-minutes: 1
      run: |
        $fluentbit=Start-Process -PassThru -NoNewWindow -FilePath "bin\fluent-bit.exe" -ArgumentList "-i", "dummy" "-o", "stdout"
        Start-Sleep -s 15
        if ($fluentbit.HasExited) {
          echo "Fluent Bit exited prematurely"
          exit 1
        }
        Stop-Process -Force -InputObject $p
        Get-Process | Where-Object {$_.HasExited}
      shell: powershell

    - name: Run zip version with default config
      timeout-minutes: 1
      run: |
        $fluentbit=Start-Process -PassThru -NoNewWindow -FilePath "bin\fluent-bit.exe"
        Start-Sleep -s 15
        if ($fluentbit.HasExited) {
          echo "Fluent Bit exited prematurely"
          exit 1
        }
        Stop-Process -Force -InputObject $p
        Get-Process | Where-Object {$_.HasExited}
      shell: powershell