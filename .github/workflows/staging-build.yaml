---
name: Deploy to staging

on:
  push:
    tags:
      - '*'

  workflow_dispatch:
    inputs:
      version:
        description: Version of Fluent Bit to build
        required: true
        default: master
      target:
        description: Only build a specific target, intended for debug/test/quick builds only.
        required: false
        default: ""

  # Run nightly build - disable until after 1.9 release
  # schedule:
  # - cron: "0 6 * * *"

# We do not want a new staging build to run whilst we are releasing the current staging build.
# We also do not want multiples to run for the same version.
concurrency: staging-build-release

jobs:

  # This job copes with the variable approach of either being triggered by a tag,
  # where the data is then in the reference provided, or by a manual event where
  # the data is then in another structure entirely. We take the manual input if
  # it is present, otherwise we try to figure it out.
  staging-build-get-version:
    name: Get version to build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.formatted_version.outputs.replaced }}
      date: ${{ steps.date.outputs.date }}
    steps:
      # This step is to consolidate the three different triggers into a single "version"
      # 1. If manual dispatch - use the version provided.
      # 2. If cron/regular build - use master.
      # 3. If tag trigger, use that tag.
      - name: Get the version
        id: get_version
        run: |
            VERSION="${INPUT_VERSION}"
            if [ -z "${VERSION}" ]; then
              echo "Defaulting to master"
              VERSION=master
            fi
            echo ::set-output name=VERSION::$VERSION
        shell: bash
        env:
          # Use the dispatch variable in preference, if empty use the context ref_name which should
          # only ever be a tag or the master branch for cron builds.
          INPUT_VERSION: ${{ github.event.inputs.version || github.ref_name }}

      # String the 'v' prefix for tags.
      - uses: frabert/replace-string-action@v2.0
        id: formatted_version
        with:
          pattern: '[v]*(.*)$'
          string: "${{ steps.get_version.outputs.VERSION }}"
          replace-with: '$1'
          flags: 'g'

      # For cron builds, i.e. nightly, we provide date and time as extra parameter to distinguish them.
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date '+%Y-%m-%d-%H_%M_%S')"


  staging-build-images:
    needs: staging-build-get-version
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Version: ${{ needs.staging-build-get-version.outputs.version }}"
        shell: bash
